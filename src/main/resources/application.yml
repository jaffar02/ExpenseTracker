spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/userservice
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10  # Optional: you can adjust based on your requirement
    continue-on-error: true
    initialize: true

  jpa:
    hibernate:
      ddl-auto: create  # Optional: use 'none', 'update', 'create', or 'create-drop'
    show-sql: true      # Optional: shows SQL queries in the console during development
    properties:
      hibernate:
        format_s  ql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: userinfo-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.example.userservice.deserializer.UserInfoDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.example.userservice"
    topic:
      name: testingself_json

#  topic:
#    name: testing_json
#  producer:
#    bootstrap-servers: localhost:2181
#    key-serializer: org.apache.kafka.common.serialization.StringSerializer
#    value-serializer: AuthService.serializer.UserInfoSerializer

